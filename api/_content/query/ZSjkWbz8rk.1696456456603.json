{"_path":"/typescript","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"TypeScript","description":"Can has Superset?","position":4,"category":"JavaScript","date":"2021-08-11","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"typescript"},"children":[{"type":"text","value":"TypeScript"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TypeScript is a superset of JavaScript and is used to write\ncode which is preprocessed into JavaScript at build time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is not yet an 'official' guide or convention but most\nrules used for your JavaScript code should extend to\nsuitability for TypeScript as well."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following advice is borrowed heavily from "},{"type":"element","tag":"a","props":{"href":"https://basarat.gitbook.io/typescript/styleguide","rel":["nofollow"]},"children":[{"type":"text","value":"Basarat Al Syed"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A formatter or linter for Typescript should be configured on your project,\nwith rules committed to your project repository for consistent developer\nexperience. The "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"typescript-eslint"}]},{"type":"text","value":" tool is recommended but "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"rome"}]},{"type":"text","value":" also lints\nand formats Typescript."}]},{"type":"element","tag":"h3","props":{"id":"interface"},"children":[{"type":"text","value":"Interface"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PascalCase"}]},{"type":"text","value":" for name. Don't prepend with I"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"camelCase"}]},{"type":"text","value":" for members"}]}]},{"type":"element","tag":"h3","props":{"id":"type"},"children":[{"type":"text","value":"Type"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PascalCase"}]},{"type":"text","value":" for name"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"camelCase"}]},{"type":"text","value":" for members"}]}]},{"type":"element","tag":"h3","props":{"id":"namespace"},"children":[{"type":"text","value":"Namespace"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PascalCase"}]},{"type":"text","value":" for names."}]}]},{"type":"element","tag":"h3","props":{"id":"enum"},"children":[{"type":"text","value":"Enum"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PascalCase"}]},{"type":"text","value":" for enum names"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"PascalCase"}]},{"type":"text","value":" for enum member"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TypeScript enums can be "},{"type":"element","tag":"a","props":{"href":"https://bluepnume.medium.com/nine-terrible-ways-to-use-typescript-enums-and-one-good-way-f9c7ec68bf15","rel":["nofollow"]},"children":[{"type":"text","value":"problematic"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"null-vs-undefined"},"children":[{"type":"text","value":"Null vs. Undefined"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prefer not to use either for explicit unavailability"}]}]},{"type":"element","tag":"h4","props":{"id":"bad"},"children":[{"type":"text","value":"Bad"}]},{"type":"element","tag":"pre","props":{"className":"language-ts shiki shiki-themes github-dark","code":"let foo = { x: 123, y: undefined };\n","language":"ts","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":"let"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" foo "}]},{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" { x: "}]},{"type":"element","tag":"span","props":{"style":"color:#79B8FF"},"children":[{"type":"text","value":"123"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":", y: "}]},{"type":"element","tag":"span","props":{"style":"color:#79B8FF"},"children":[{"type":"text","value":"undefined"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" };"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"good"},"children":[{"type":"text","value":"Good"}]},{"type":"element","tag":"pre","props":{"className":"language-ts shiki shiki-themes github-dark","code":"let foo: { x: number; y?: number } = { x: 123 };\n","language":"ts","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":"let"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" foo"}]},{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" { "}]},{"type":"element","tag":"span","props":{"style":"color:#FFAB70"},"children":[{"type":"text","value":"x"}]},{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"color:#79B8FF"},"children":[{"type":"text","value":" number"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":"; "}]},{"type":"element","tag":"span","props":{"style":"color:#FFAB70"},"children":[{"type":"text","value":"y"}]},{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":"?:"}]},{"type":"element","tag":"span","props":{"style":"color:#79B8FF"},"children":[{"type":"text","value":" number"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" } "}]},{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" { x: "}]},{"type":"element","tag":"span","props":{"style":"color:#79B8FF"},"children":[{"type":"text","value":"123"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":" };"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use undefined in general (do consider returning an object like "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"{valid:boolean, value?:Foo}"}]},{"type":"text","value":" instead)"}]}]},{"type":"element","tag":"h4","props":{"id":"bad-1"},"children":[{"type":"text","value":"Bad"}]},{"type":"element","tag":"pre","props":{"className":"language-ts shiki shiki-themes github-dark","code":"return null;\n","language":"ts","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"style":"color:#79B8FF"},"children":[{"type":"text","value":" null"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"good-1"},"children":[{"type":"text","value":"Good"}]},{"type":"element","tag":"pre","props":{"className":"language-ts shiki shiki-themes github-dark","code":"return undefined;\n","language":"ts","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"color:#F97583"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"style":"color:#79B8FF"},"children":[{"type":"text","value":" undefined"}]},{"type":"element","tag":"span","props":{"style":"color:#E1E4E8"},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use null where it's a part of the API or conventional"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Reason: It is conventional in Node.js e.g. error is null for NodeBack style callbacks."}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use truthy check for objects being null or undefined"}]}]},{"type":"element","tag":"h3","props":{"id":"formatting"},"children":[{"type":"text","value":"Formatting"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"IDEs should be used which allow typescript support and\nautomatic formatting. It's also possible to use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"tsfmt"}]},{"type":"text","value":" on the command line."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prefer single quotes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use 2 space, not tabs"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use semicolons"}]}]},{"type":"element","tag":"h4","props":{"id":"arrays"},"children":[{"type":"text","value":"Arrays"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Annotate arrays as "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"foos: Foo[]"}]},{"type":"text","value":" instead of "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"foos: Array<Foo>"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's easier to read and is used by the TypeScript team."}]}]},{"type":"element","tag":"h4","props":{"id":"type-vs-interface"},"children":[{"type":"text","value":"type vs. interface"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" when you "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"might"}]},{"type":"text","value":" need a union or intersection."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"interface"}]},{"type":"text","value":" when you want "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"extends"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"implements"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Otherwise, use what you prefer"}]}]},{"type":"element","tag":"h3","props":{"id":"further-reading"},"children":[{"type":"text","value":"Further Reading"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"https://google.github.io/styleguide/tsguide.html","rel":["nofollow"]},"children":[{"type":"text","value":"Google TypeScript Style Guide"}]},{"type":"text","value":" is a good source of best-practice with explanatory\ntext on why and when conventions should be followed. "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"typescript-eslint"}]},{"type":"text","value":" packages up a good\nset of recommended style conventions for TypeScript, steps to integrate the package with\nyour project are included in the "},{"type":"element","tag":"a","props":{"href":"https://typescript-eslint.io/getting-started","rel":["nofollow"]},"children":[{"type":"text","value":"getting started"}]},{"type":"text","value":" guide. Some of the above rules\nare effectively enforced via the package, or by default integration of typescript linting\nin your IDE. "},{"type":"element","tag":"a","props":{"href":"https://www.jetbrains.com/help/webstorm/linting-typescript.html","rel":["nofollow"]},"children":[{"type":"text","value":"Linting Typescript in WebStorm"}]},{"type":"text","value":" is covered by JetBrains, and "},{"type":"element","tag":"a","props":{"href":"https://code.visualstudio.com/docs/languages/typescript","rel":["nofollow"]},"children":[{"type":"text","value":"in VS Code"}]},{"type":"text","value":"\nby Microsoft."}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":""}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"typescript","depth":2,"text":"TypeScript","children":[{"id":"interface","depth":3,"text":"Interface"},{"id":"type","depth":3,"text":"Type"},{"id":"namespace","depth":3,"text":"Namespace"},{"id":"enum","depth":3,"text":"Enum"},{"id":"null-vs-undefined","depth":3,"text":"Null vs. Undefined"},{"id":"formatting","depth":3,"text":"Formatting"},{"id":"further-reading","depth":3,"text":"Further Reading"}]}]}},"_type":"markdown","_id":"content:4.typescript.md","_source":"content","_file":"4.typescript.md","_extension":"md"}